basePath: /api/v1
definitions:
  main.CreateEventRequest:
    properties:
      date:
        type: string
      description:
        minLength: 10
        type: string
      location:
        minLength: 3
        type: string
      name:
        minLength: 3
        type: string
    required:
    - date
    - description
    - location
    - name
    type: object
  main.RegisterUserRequest:
    properties:
      email:
        type: string
      name:
        minLength: 3
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - name
    - password
    type: object
  storage.Attendee:
    properties:
      event_id:
        type: integer
      id:
        type: integer
      user_id:
        type: integer
    type: object
  storage.Event:
    properties:
      date:
        type: string
      description:
        type: string
      id:
        type: integer
      location:
        type: string
      name:
        type: string
      owner_id:
        type: integer
    type: object
  storage.User:
    properties:
      _:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
info:
  contact:
    email: digitalmarketfy@gmail.com
    name: Puremike
    url: http://github.com/puremike
  description: This is an API for event management
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Event Management API
  version: "1.0"
paths:
  /attendees/{userId}/events:
    get:
      consumes:
      - application/json
      description: Get the list of events for a given attendee.
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Events successfully retrieved
          schema:
            $ref: '#/definitions/storage.Event'
        "400":
          description: Invalid user ID
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get Attendee events
      tags:
      - Attendees
  /auth/{id}:
    get:
      consumes:
      - application/json
      description: Get User by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/storage.User'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get User
      tags:
      - Users
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: User payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/main.RegisterUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/storage.User'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Register user
      tags:
      - Users
  /events:
    get:
      consumes:
      - application/json
      description: Get All Events
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/storage.Event'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get Events
      tags:
      - Events
    post:
      consumes:
      - application/json
      description: Create a new event
      parameters:
      - description: Event payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/main.CreateEventRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/storage.Event'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Create event
      tags:
      - Events
  /events/{id}:
    delete:
      consumes:
      - application/json
      description: Delete event by ID
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: no content
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Delete event
      tags:
      - Events
    get:
      consumes:
      - application/json
      description: Get Event by ID
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/storage.Event'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get Event
      tags:
      - Events
    put:
      consumes:
      - application/json
      description: Update event by ID
      parameters:
      - description: Event payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/main.CreateEventRequest'
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/storage.Event'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Update event
      tags:
      - Events
  /events/{id}/attendees:
    get:
      consumes:
      - application/json
      description: Get the list of attendees for a given event by event ID.
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Attendees successfully retrieved
          schema:
            $ref: '#/definitions/storage.Attendee'
        "400":
          description: Invalid event ID
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema: {}
        "409":
          description: Conflict
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get event attendees
      tags:
      - Attendees
  /events/{id}/attendees/{userId}:
    delete:
      consumes:
      - application/json
      description: Delete attendee by event and user ID
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: no content
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Delete attendee
      tags:
      - Attendees
    post:
      consumes:
      - application/json
      description: Adds a user to the list of attendees for a given event by event
        ID and user ID.
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Attendee successfully added
          schema:
            $ref: '#/definitions/storage.Attendee'
        "400":
          description: Invalid event ID or user ID
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Event or user not found
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Attendee already exists
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Add an attendee to an event
      tags:
      - Attendees
swagger: "2.0"
